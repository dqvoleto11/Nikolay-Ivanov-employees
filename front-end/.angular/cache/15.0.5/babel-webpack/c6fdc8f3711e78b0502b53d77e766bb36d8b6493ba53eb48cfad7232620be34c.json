{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpEventType } from '@angular/common/http';\nimport { interval } from 'rxjs';\nlet AppComponent = class AppComponent {\n  constructor(api) {\n    this.api = api;\n    this.fileName = '';\n    this.selectedFile = null;\n    this.errorMsg = '';\n    this.uploadProgress = 0;\n    this.summary = null;\n    this.details = [];\n  }\n  onFileSelected(event) {\n    this.reset();\n    const input = event.target;\n    if (input.files && input.files.length > 0) {\n      this.selectedFile = input.files[0];\n      this.fileName = this.selectedFile.name;\n      this.uploadProgress = 0;\n    }\n  }\n  onProcess() {\n    if (!this.selectedFile) {\n      this.errorMsg = 'Please select a CSV file first.';\n      return;\n    }\n    this.errorMsg = '';\n    this.summary = null;\n    this.details = [];\n    this.uploadProgress = 0;\n    // simulate incremental progress (20% steps every second)\n    this.progressSub = interval(1000).subscribe(i => {\n      this.uploadProgress = Math.min(100, this.uploadProgress + 20);\n    });\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    // call API and ignore events, simulation drives progress\n    this.apiSub = this.api.processCsvWithProgress(formData).subscribe({\n      next: event => {\n        var _a, _b;\n        if (event.type === HttpEventType.Response) {\n          // API finished\n          this.uploadProgress = 100;\n          this.summary = ((_a = event.body) === null || _a === void 0 ? void 0 : _a.summary) || null;\n          this.details = ((_b = event.body) === null || _b === void 0 ? void 0 : _b.details) || [];\n          this.clearProgressSimulation();\n        }\n      },\n      error: err => {\n        this.errorMsg = err.error || 'Error processing CSV.';\n        this.clearProgressSimulation();\n      }\n    });\n  }\n  clearProgressSimulation() {\n    if (this.progressSub) {\n      this.progressSub.unsubscribe();\n      this.progressSub = undefined;\n    }\n  }\n  reset() {\n    var _a;\n    this.errorMsg = '';\n    this.summary = null;\n    this.details = [];\n    this.uploadProgress = 0;\n    this.clearProgressSimulation();\n    (_a = this.apiSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n  ngOnDestroy() {\n    var _a;\n    this.clearProgressSimulation();\n    (_a = this.apiSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}